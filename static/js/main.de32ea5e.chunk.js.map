{"version":3,"sources":["components/CounterPanel.module.css","components/SettingItem.module.css","components/SettingsPanel.module.css","App.module.css","components/SettingItem.js","components/SettingsPanel.js","components/CounterPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SettingItem","onSettingChange","e","props","changeValue","setting","id","currentTarget","value","render","settingInputClassName","isError","styles","setting_input","incorrect_value","className","setting_item","setting_title","title","onChange","onFocus","type","min","React","Component","SettingsPanel","settings","settingValues","map","set","settings_panel","settings_items","setup","setup_button","onClick","onSetClick","disabled","disabledSET","CounterPanel","counterClassName","disabledINC","isChanging","counter_wrapper","counter_with_maxValue","counter_panel","counter_with_incorrectValues","counter","control_buttons","inc_button","onIncClick","reset_button","onResetClick","disabledRESET","App","state","startValue","maxValue","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","getItem","parse","setState","settingId","newValue","newSettings","comparingValues","arrValues","forEach","app_wrapper","this","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.de32ea5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter_panel\":\"CounterPanel_counter_panel__2E4rh SettingsPanel_settings_panel__1rQ_1\",\"counter_wrapper\":\"CounterPanel_counter_wrapper__23nkk SettingsPanel_settings_items__TLdXS\",\"counter_with_maxValue\":\"CounterPanel_counter_with_maxValue__mHOAF\",\"counter_with_incorrectValues\":\"CounterPanel_counter_with_incorrectValues__18APp\",\"counter\":\"CounterPanel_counter__22mHO\",\"control_buttons\":\"CounterPanel_control_buttons__1FI_G SettingsPanel_setup__Fe1JY\",\"inc_button\":\"CounterPanel_inc_button__2T-Hs SettingsPanel_setup_button__1jUik\",\"reset_button\":\"CounterPanel_reset_button__3-P5l CounterPanel_inc_button__2T-Hs SettingsPanel_setup_button__1jUik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting_item\":\"SettingItem_setting_item__2CtdZ\",\"setting_input\":\"SettingItem_setting_input__1-coB\",\"setting_title\":\"SettingItem_setting_title__3FC20\",\"incorrect_value\":\"SettingItem_incorrect_value__31FvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_panel\":\"SettingsPanel_settings_panel__1rQ_1\",\"settings_items\":\"SettingsPanel_settings_items__TLdXS\",\"setup\":\"SettingsPanel_setup__Fe1JY\",\"setup_button\":\"SettingsPanel_setup_button__1jUik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_wrapper\":\"App_app_wrapper__J5SWg\"};","import React from 'react';\r\n\r\nimport styles from \"./SettingItem.module.css\";\r\n\r\nclass SettingItem extends React.Component {\r\n\r\n\tonSettingChange = (e) => {\r\n\t\tthis.props.changeValue (this.props.setting.id, e.currentTarget.value)\r\n\t};\r\n\r\n\trender = () => {\r\n\r\n\t\tlet settingInputClassName = this.props.isError ? `${styles.setting_input} ${styles.incorrect_value}` : `${styles.setting_input}`;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={styles.setting_item}>\r\n\t\t\t\t<div className={styles.setting_title}>{this.props.setting.title}</div>\r\n\t\t\t\t<input className={settingInputClassName} onChange={this.onSettingChange} onFocus={this.onSettingChange} type={this.props.setting.type}\r\n\t\t\t\t\t   min={this.props.setting.min} value={this.props.setting.value}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SettingItem;\r\n","import React from 'react';\r\n\r\nimport styles from \"./SettingsPanel.module.css\";\r\nimport SettingItem from \"./SettingItem\";\r\n\r\nclass SettingsPanel extends React.Component {\r\n\trender = () => {\r\n\r\n\t\tlet settings = this.props.settingValues.map (set => <SettingItem setting={set} isError={this.props.isError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t changeValue={this.props.changeValue}/>)\r\n\r\n\t\treturn (\r\n\t\t\t<div className={styles.settings_panel}>\r\n\t\t\t\t<div className={styles.settings_items}>\r\n\t\t\t\t\t{settings}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={styles.setup}>\r\n\t\t\t\t\t<button className={styles.setup_button} onClick={this.props.onSetClick} disabled={this.props.disabledSET}>SET</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SettingsPanel;\r\n","import React from 'react';\r\n\r\nimport styles from \"./CounterPanel.module.css\";\r\n\r\nclass CounterPanel extends React.Component {\r\n\r\n\trender = () => {\r\n\r\n\t\tlet counterClassName = (this.props.disabledINC && !this.props.isChanging) ?\r\n\t\t\t`${styles.counter_wrapper} ${styles.counter_with_maxValue}` : `${styles.counter_wrapper}`;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={styles.counter_panel}>\r\n\t\t\t\t<div className={counterClassName}>\r\n\t\t\t\t\t{this.props.isError ? <div className={styles.counter_with_incorrectValues}>enter a valid values</div> :\r\n\t\t\t\t\t\tthis.props.isChanging ? <div>set start and maximum value</div> :\r\n\t\t\t\t\t\t\t<div className={styles.counter}>{this.props.counter}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={styles.control_buttons}>\r\n\t\t\t\t\t<button className={styles.inc_button} onClick={this.props.onIncClick}\r\n\t\t\t\t\t\t\tdisabled={this.props.disabledINC}>INC\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className={styles.reset_button} onClick={this.props.onResetClick}\r\n\t\t\t\t\t\t\tdisabled={this.props.disabledRESET}>RESET\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CounterPanel;\r\n","import React from 'react';\r\n\r\nimport styles from \"./App.module.css\";\r\nimport SettingsPanel from \"./components/SettingsPanel\";\r\nimport CounterPanel from \"./components/CounterPanel\";\r\n\r\nclass App extends React.Component {\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.restoreState ();\r\n\t}\r\n\r\n\tstate = {\r\n\t\tsettingValues: [\r\n\t\t\t{id: 1, title: \"start value \", type: \"number\", min: 0, value: 0},\r\n\t\t\t{id: 2, title: \"max value \", type: \"number\", min: 1, value: 1}\r\n\t\t],\r\n\t\tcounter: 0,\r\n\t\tstartValue: 0,\r\n\t\tmaxValue: 1,\r\n\t\tisChanging: false,\r\n\t\tisError: false,\r\n\t\tdisabledINC: false,\r\n\t\tdisabledRESET: false,\r\n\t\tdisabledSET: true\r\n\t};\r\n\r\n\tsaveState = () => {\r\n\t\tlet stateAsString = JSON.stringify (this.state);\r\n\t\tlocalStorage.setItem (\"counter_state\", stateAsString)\r\n\t};\r\n\r\n\trestoreState = () => {\r\n\t\tlet stateAsString = localStorage.getItem (\"counter_state\");\r\n\t\tif (stateAsString) {\r\n\t\t\tlet state = JSON.parse (stateAsString);\r\n\t\t\tthis.setState (state);\r\n\t\t}\r\n\t};\r\n\r\n\tchangeValue = (settingId, newValue) => {\r\n\t\tlet newSettings = this.state.settingValues.map (set => {\r\n\t\t\tif (set.id === settingId) {\r\n\t\t\t\treturn {...set, value: +newValue}\r\n\t\t\t}\r\n\t\t\treturn set;\r\n\t\t});\r\n\t\tthis.setState ({\r\n\t\t\tsettingValues: newSettings,\r\n\t\t\tisChanging: true,\r\n\t\t\tdisabledINC: true,\r\n\t\t\tdisabledRESET: true\r\n\t\t}, () => {\r\n\t\t\tthis.comparingValues ();\r\n\t\t})\r\n\t};\r\n\r\n\tcomparingValues = () => {\r\n\t\tlet arrValues = this.state.settingValues.map (set => {\r\n\t\t\treturn set.value;\r\n\t\t})\r\n\t\tif (arrValues[0] >= arrValues[1]) {\r\n\t\t\tthis.setState ({\r\n\t\t\t\tisError: true,\r\n\t\t\t\tdisabledSET: true\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState ({\r\n\t\t\t\tisError: false,\r\n\t\t\t\tdisabledSET: false\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\tonIncClick = () => {\r\n\t\tlet counter = this.state.counter;\r\n\t\tlet maxValue = this.state.maxValue;\r\n\t\tif (counter < maxValue) {\r\n\t\t\tthis.setState ({\r\n\t\t\t\tcounter: ++counter\r\n\t\t\t}, () => {\r\n\t\t\t\tif (counter === maxValue) {\r\n\t\t\t\t\tthis.setState ({\r\n\t\t\t\t\t\tdisabledINC: true\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tthis.saveState();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.saveState();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tonResetClick = () => {\r\n\t\tlet startValue = this.state.startValue;\r\n\t\tthis.setState ({\r\n\t\t\tcounter: startValue,\r\n\t\t\tdisabledINC: false\r\n\t\t}, () => {\r\n\t\t\tthis.saveState();\r\n\t\t})\r\n\t};\r\n\r\n\tonSetClick = () => {\r\n\t\tthis.state.settingValues.forEach (set => {\r\n\t\t\tif (set.title === \"start value \") {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\tcounter: set.value,\r\n\t\t\t\t\tstartValue: set.value\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\tthis.saveState();\r\n\t\t\t\t});\r\n\t\t\t} else if (set.title === \"max value \") {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\tmaxValue: set.value\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\tthis.saveState();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.setState ({\r\n\t\t\tisChanging: false,\r\n\t\t\tdisabledINC: false,\r\n\t\t\tdisabledRESET: false,\r\n\t\t\tdisabledSET: true\r\n\t\t}, () => {\r\n\t\t\tthis.saveState();\r\n\t\t})\r\n\t};\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className={styles.app_wrapper}>\r\n\t\t\t\t<SettingsPanel settingValues={this.state.settingValues} isError={this.state.isError}\r\n\t\t\t\t\t\t\t   disabledSET={this.state.disabledSET}\r\n\t\t\t\t\t\t\t   onSetClick={this.onSetClick} changeValue={this.changeValue}/>\r\n\r\n\t\t\t\t<CounterPanel counter={this.state.counter} isError={this.state.isError} isChanging={this.state.isChanging}\r\n\t\t\t\t\t\t\t  disabledINC={this.state.disabledINC} disabledRESET={this.state.disabledRESET}\r\n\t\t\t\t\t\t\t  onIncClick={this.onIncClick} onResetClick={this.onResetClick}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (\n\t<React.StrictMode>\n\t\t<App/>\n\t</React.StrictMode>,\n\tdocument.getElementById ('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister ();\n"],"sourceRoot":""}